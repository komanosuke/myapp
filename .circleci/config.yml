version: 2.1

executors:
  ruby-executor:
    docker:
      - image: ruby:3.1.3
        environment:
          RAILS_ENV: test
          DB_HOST: 127.0.0.1
          DB_USERNAME: admin
          DB_PASSWORD: password
      - image: circleci/mysql:5.7
        environment:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: mydatabase_test

jobs:
  build:
    executor: ruby-executor
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            bundle install --path vendor/bundle
      - run:
          name: Install Dockerize
          command: |
            DOCKERIZE_VERSION=v0.7.0
            wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
            sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
            rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 1m
      - run:
          name: Database setup
          command: |
            bundle exec rake db:create
            bundle exec rake db:schema:load
      - run:
          name: Run Minitest
          command: |
            bundle exec rails test

  push-to-ecr:
    machine: true
    steps:
      - checkout
      - run:
          name: Install AWS CLI
          command: |
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install
      - run:
          name: Authenticate with ECR
          command: |
            aws ecr get-login-password --region us-west-1 | docker login --username AWS --password-stdin 345762154890.dkr.ecr.us-west-1.amazonaws.com
      - run:
          name: Build and Push Rails Docker Image to ECR
          command: |
            docker build -t myrailsapp -f Dockerfile .
            docker tag myrailsapp:latest 345762154890.dkr.ecr.us-west-1.amazonaws.com/myrailsapp:latest
            docker push 345762154890.dkr.ecr.us-west-1.amazonaws.com/myrailsapp:latest
      - run:
          name: Build and Push Nginx Docker Image to ECR
          command: |
            docker build -t my-nginx-image -f nginx/Dockerfile ./nginx 
            docker tag my-nginx-image:latest 345762154890.dkr.ecr.us-west-1.amazonaws.com/my-nginx-image:latest
            docker push 345762154890.dkr.ecr.us-west-1.amazonaws.com/my-nginx-image:latest


  deploy:
    docker:
      - image: hashicorp/terraform:1.5.3
    steps:
      - checkout
      - run:
          name: Terraform Init
          command: terraform init
      - run:
          name: Terraform Plan
          command: terraform plan
      - run:
          name: Terraform Apply
          command: terraform apply -auto-approve

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - push-to-ecr:
          requires:
            - build
      - deploy:
          requires:
            - push-to-ecr
